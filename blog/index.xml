<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on 0xYx</title>
    <link>https://0xYx.github.io/blog/</link>
    <description>Recent content in Blogs on 0xYx</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© yingxinsong</copyright>
    <lastBuildDate>Thu, 30 Sep 2021 17:22:36 +0800</lastBuildDate><atom:link href="https://0xYx.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>工程师自检手册</title>
      <link>https://0xYx.github.io/blog/posts/hiring/</link>
      <pubDate>Thu, 30 Sep 2021 17:22:36 +0800</pubDate>
      
      <guid>https://0xYx.github.io/blog/posts/hiring/</guid>
      <description>在这个职场中，我觉得每一个单纯的工程师都应该有一个要做与不要做的手册，每次头脑发热做事情的时候，应该拿出来自检一下。下面，就是我从很多地方吸收的&amp;quot;办公室真理&amp;quot;，当然，后面也许还会收集更多：
不要做 1. 闷头努力，从不汇报  吃力不讨好，功劳全部落入别人手里，出了问题，好吧，你来背锅
 2. 从不说不  这个也可以做，那个也可以做，工期越拉越长，bug 越积越多
 3. 框架没搭，就先优化  是人都会知道，一个work的版本，要比一个完美版更加重要。长点心吧，先跑通、再优化，相信我，这真是一个真理
 4. 抱怨一堆，代码没写  总有人觉得产品需求这不合理，那不合理。老板觉得合理，你觉得有问题，你算老几？</description>
    </item>
    
    <item>
      <title>逆向Unity3D Asset Bundle</title>
      <link>https://0xYx.github.io/blog/posts/unity3d-decrypt/</link>
      <pubDate>Tue, 28 Sep 2021 12:36:50 +0800</pubDate>
      
      <guid>https://0xYx.github.io/blog/posts/unity3d-decrypt/</guid>
      <description>前几个月因为项目的原因，想要看一下一个售卖3D手办的软件是怎么实现的，并且想看看有没有能力获取到里面的3D模型。拿到安装包之后，还是按照惯例直接砸壳调试分析了一下：
结果启动之后，直接挂了。定位一下，有很明确的关于License的校验：
打开他的lib文件看一下，从上图能看出，这个ImglyKit 跟PhotoEditorSDK 是依赖关系，因为ImglyKit开了校验，所以直接挂了。这里有意思的是他还提示你应该联系他的销售购买正版授权什么的。 老办法，用hoppers看一下加载的代码，找到加载入口，然后用logos把这一块加载的代码干掉再说：
%hook RNPESDKImglyKit - (void)unlockWithLicense:(id)license { // 实际上是这个导致的，我们让他不要调用原来的方法 NSLog(@&amp;#34;hook unlockWithLicense&amp;#34;); %log; } %end 处理之后果然，这里可以看到bundleid 是不一样的：</description>
    </item>
    
  </channel>
</rss>
