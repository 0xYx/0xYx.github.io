<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>牢骚 on Kapuseru</title>
    <link>https://www.yingxinsong.com/tags/%E7%89%A2%E9%AA%9A/</link>
    <description>Recent content in 牢骚 on Kapuseru</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Kapuseru - yingxinsong</copyright>
    <lastBuildDate>Thu, 30 Sep 2021 17:22:36 +0800</lastBuildDate><atom:link href="https://www.yingxinsong.com/tags/%E7%89%A2%E9%AA%9A/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>工程师自检手册</title>
      <link>https://www.yingxinsong.com/posts/hiring/</link>
      <pubDate>Thu, 30 Sep 2021 17:22:36 +0800</pubDate>
      
      <guid>https://www.yingxinsong.com/posts/hiring/</guid>
      <description>在这个职场中，我觉得每一个单纯的工程师都应该有一个要做与不要做的手册，每次头脑发热做事情的时候，应该拿出来自检一下。下面，就是我从很多地方吸收的&amp;quot;办公室真理&amp;quot;，当然，后面也许还会收集更多：
不要做 1. 闷头努力，从不汇报  吃力不讨好，功劳全部落入别人手里，出了问题，好吧，你来背锅
 2. 从不说不  这个也可以做，那个也可以做，工期越拉越长，bug 越积越多
 3. 框架没搭，就先优化  是人都会知道，一个work的版本，要比一个完美版更加重要。长点心吧，先跑通、再优化，相信我，这真是一个真理
 4. 抱怨一堆，代码没写  总有人觉得产品需求这不合理，那不合理。老板觉得合理，你觉得有问题，你算老几？
 5. 相信框架，相信银弹  引入这个框架就能解决A问题，接入那个组件可以解决B问题。结果呢？头痛医头，脚痛医脚！
 6. 眼高手低，像个菜鸡  技术需求就牛逼？业务需求就垃圾？你也就会CURD！
 要做 1. 勤写总结，多发邮件  就要这么干！怒刷存在感！
 2. 开会必到，使命必达  开会没有你，那就开不下去。问题没有你，那就没有底。
 3. 凌晨3点，定位问题  睡觉那是给死人的 00：30：&amp;ldquo;这个怎么刷不出来了?&amp;rdquo; 00：30：&amp;ldquo;收到，我立马看看！&amp;rdquo;
 4. 干活之前，先提问题  确认问题的归属非常重要 &amp;ldquo;这个怎么刷不出来？客户端看看？&amp;rdquo; &amp;ldquo;安卓iOS都刷不出来，服务端看看？&amp;rdquo;
 5. 同步进度，保留证据  因为我的问题延期了？不存在的，10天以前就同步了，当时你也同意了！
 </description>
    </item>
    
  </channel>
</rss>
